// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Country {
  id           String       @id @default(cuid())
  name         String       @unique
  code         String       @unique // ISO code like UK, FR, DE
  flag         String?      // Emoji flag
  region       String?      // Europe, UK, etc.
  euMember     Boolean      @default(false)
  language     String?      // Primary language
  currency     String?      // EUR, GBP, etc.
  universities University[]
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
}

model University {
  id                String        @id @default(cuid())
  name              String
  countryId         String
  country           Country       @relation(fields: [countryId], references: [id])
  ranking           Int?
  rankingScore      Float?        // Custom ranking score for Damien
  recommendationTier String?      // S, A, B, C tier recommendation
  ucasCode          String?       @unique
  courseName        String?
  entryRequirements String?
  ieltsRequired     Float?
  tuitionFee        Float?
  location          String?
  website           String?
  notes             String?

  // User's personal notes
  userNotes         String?       // Main personal notes/description

  // Additional fields for comprehensive info
  tier              String?       // Tier 1, Tier A, etc.
  category          String?       // Reach, Match, Safety
  ibRequirement     String?       // IB score requirement
  aLevelRequirement String?       // A-Level requirement
  mathsRequirement  String?       // Specific maths requirement
  admissionTest     String?       // TMUA, STEP, etc.
  testDeadline      DateTime?     // Test deadline
  applicationDeadline DateTime?   // Application deadline
  decisionDate      DateTime?     // Expected decision date

  // Career and prospects
  employmentRate    Float?        // Employment rate %
  averageSalary     Float?        // Average starting salary
  majorRecruiters   String?       // Major recruiting companies
  industryLinks     String?       // Industry connections
  researchAreas     String?       // Key research areas

  // Living and costs
  livingCosts       Float?        // Annual living costs
  accommodation     String?       // Accommodation info
  campusInfo        String?       // Campus information

  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
  applications      Application[]
  courses           Course[]
  testRequirements  TestRequirement[]
  keyDates          KeyDate[]
  universityNotes   UniversityNote[]
}

model Application {
  id                String              @id @default(cuid())
  universityId      String
  university        University          @relation(fields: [universityId], references: [id], onDelete: Cascade)
  status            ApplicationStatus   @default(NOT_STARTED)
  applicationDate   DateTime?
  deadline          DateTime?
  personalStatement String?
  reference1Status  ReferenceStatus     @default(NOT_REQUESTED)
  reference2Status  ReferenceStatus     @default(NOT_REQUESTED)
  transcriptStatus  DocumentStatus      @default(NOT_SUBMITTED)
  ieltsStatus       DocumentStatus      @default(NOT_SUBMITTED)
  otherDocuments    String?
  offerReceived     Boolean             @default(false)
  offerType         String?
  offerConditions   String?
  decisionDeadline  DateTime?
  notes             String?
  priority          Priority            @default(MEDIUM)
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  todos             Todo[]
  documents         Document[]
}

model Todo {
  id            String      @id @default(cuid())
  applicationId String?
  application   Application? @relation(fields: [applicationId], references: [id], onDelete: Cascade)
  title         String
  description   String?
  dueDate       DateTime?
  completed     Boolean     @default(false)
  priority      Priority    @default(MEDIUM)
  category      TodoCategory @default(GENERAL)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model Document {
  id            String         @id @default(cuid())
  applicationId String
  application   Application    @relation(fields: [applicationId], references: [id], onDelete: Cascade)
  name          String
  type          DocumentType
  status        DocumentStatus @default(NOT_SUBMITTED)
  submittedDate DateTime?
  notes         String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model Deadline {
  id          String   @id @default(cuid())
  title       String
  description String?
  date        DateTime
  type        DeadlineType
  critical    Boolean  @default(false)
  reminder    DateTime?
  completed   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum ApplicationStatus {
  NOT_STARTED
  IN_PROGRESS
  SUBMITTED
  UNDER_REVIEW
  INTERVIEW_SCHEDULED
  OFFER_RECEIVED
  OFFER_ACCEPTED
  OFFER_DECLINED
  REJECTED
  WITHDRAWN
}

enum ReferenceStatus {
  NOT_REQUESTED
  REQUESTED
  RECEIVED
  SUBMITTED
}

enum DocumentStatus {
  NOT_SUBMITTED
  IN_PROGRESS
  SUBMITTED
  APPROVED
  REJECTED
}

enum Priority {
  LOW
  MEDIUM
  HIGH
  CRITICAL
}

enum TodoCategory {
  GENERAL
  DOCUMENT
  DEADLINE
  INTERVIEW
  FINANCIAL
  VISA
  ACCOMMODATION
}

enum DocumentType {
  TRANSCRIPT
  IELTS
  PERSONAL_STATEMENT
  REFERENCE
  PASSPORT
  FINANCIAL
  OTHER
}

enum DeadlineType {
  APPLICATION
  DOCUMENT
  INTERVIEW
  DECISION
  FINANCIAL
  VISA
  OTHER
}

model Course {
  id            String     @id @default(cuid())
  universityId  String
  university    University @relation(fields: [universityId], references: [id], onDelete: Cascade)
  name          String
  code          String?
  duration      String?    // 3 years, 4 years (MEng), etc.
  degree        String?    // BSc, MEng, MSci, etc.
  description   String?
  modules       String?    // Key modules/subjects
  careerPaths   String?    // Career opportunities
  prerequisites String?    // Prerequisites
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
}

model TestRequirement {
  id            String     @id @default(cuid())
  universityId  String
  university    University @relation(fields: [universityId], references: [id], onDelete: Cascade)
  testName      String     // TMUA, STEP, ESAT, etc.
  required      Boolean    @default(false)
  recommended   Boolean    @default(false)
  testDate      DateTime?
  registrationDeadline DateTime?
  minScore      String?    // Minimum score required
  typicalScore  String?    // Typical successful score
  notes         String?
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
}

model KeyDate {
  id            String     @id @default(cuid())
  universityId  String
  university    University @relation(fields: [universityId], references: [id], onDelete: Cascade)
  title         String
  date          DateTime
  type          String     // Application, Test, Interview, Decision, etc.
  description   String?
  critical      Boolean    @default(false)
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
}

model StudentProfile {
  id                  String   @id @default(cuid())
  name                String
  dateOfBirth         DateTime
  currentGrade        String   // DP2, Grade 12, etc.
  school              String

  // IB Subjects and Grades
  englishGrade        Int?     // 1-7
  englishLevel        String?  // SL/HL
  frenchGrade         Int?
  frenchLevel         String?
  mathGrade           Int?
  mathLevel           String?
  businessGrade       Int?
  businessLevel       String?
  physicsGrade        Int?
  physicsLevel        String?
  computerScienceGrade Int?
  computerScienceLevel String?

  // IB Core Components
  casStatus           String?  // Below/Meeting/Exceeding expectations
  extendedEssayStatus String?
  tokStatus           String?

  // Predicted Total Score
  predictedTotal      Int?     // Out of 45

  // Academic Interests
  primaryInterests    String?  // JSON array of interests
  additionalInterests String?  // JSON array

  // University Preferences
  preferredCountries  String?  // JSON array
  careerGoals         String?

  // Additional Notes
  strengths           String?
  areasForImprovement String?
  teacherComments     String?

  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}

model UniversityNote {
  id           String   @id @default(cuid())
  universityId String
  university   University @relation(fields: [universityId], references: [id], onDelete: Cascade)
  content      String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}